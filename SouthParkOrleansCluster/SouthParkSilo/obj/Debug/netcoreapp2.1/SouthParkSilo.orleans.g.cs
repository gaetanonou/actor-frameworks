// <auto-generated />
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof (OrleansGeneratedCode.OrleansCodeGenebbde17d78FeaturePopulator))]
[assembly: global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0")]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute(@"SouthParkSilo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
namespace OrleansGeneratedCode80E56989
{
    using global::Orleans;
    using global::System.Reflection;

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof (global::SouthParkSilo.Grains.CharacterState))]
    internal sealed class OrleansCodeGenSouthParkSilo_Grains_CharacterStateSerializer
    {
        public OrleansCodeGenSouthParkSilo_Grains_CharacterStateSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public global::System.Object DeepCopier(global::System.Object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::SouthParkSilo.Grains.CharacterState input = ((global::SouthParkSilo.Grains.CharacterState)original);
            global::SouthParkSilo.Grains.CharacterState result = new global::SouthParkSilo.Grains.CharacterState();
            context.RecordCopy(original, result);
            result.NumberOfTimesAsked = input.NumberOfTimesAsked;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(global::System.Object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::SouthParkSilo.Grains.CharacterState input = (global::SouthParkSilo.Grains.CharacterState)untypedInput;
            context.SerializeInner(input.NumberOfTimesAsked, typeof (global::System.Int32));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public global::System.Object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::SouthParkSilo.Grains.CharacterState result = new global::SouthParkSilo.Grains.CharacterState();
            context.RecordObject(result);
            result.NumberOfTimesAsked = (global::System.Int32)context.DeserializeInner(typeof (global::System.Int32));
            return (global::SouthParkSilo.Grains.CharacterState)result;
        }
    }
}

namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(@"Orleans-CodeGenerator", @"2.0.0.0")]
    internal sealed class OrleansCodeGenebbde17d78FeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof (global::SouthParkSilo.Grains.CharacterGrain)));
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddSerializerType(typeof (global::SouthParkSilo.Grains.CharacterState), typeof (OrleansGeneratedCode80E56989.OrleansCodeGenSouthParkSilo_Grains_CharacterStateSerializer));
            feature.AddKnownType(@"Interop,System.Console", @"Interop");
            feature.AddKnownType(@"Interop+Kernel32,System.Console", @"Kernel32");
            feature.AddKnownType(@"Interop+Kernel32+CONSOLE_CURSOR_INFO,System.Console", @"CONSOLE_CURSOR_INFO");
            feature.AddKnownType(@"Interop+Kernel32+CONSOLE_SCREEN_BUFFER_INFO,System.Console", @"CONSOLE_SCREEN_BUFFER_INFO");
            feature.AddKnownType(@"Interop+Kernel32+COORD,System.Console", @"COORD");
            feature.AddKnownType(@"Interop+Kernel32+SMALL_RECT,System.Console", @"SMALL_RECT");
            feature.AddKnownType(@"Interop+Kernel32+Color,System.Console", @"Color");
            feature.AddKnownType(@"Interop+Kernel32+CHAR_INFO,System.Console", @"CHAR_INFO");
            feature.AddKnownType(@"Interop+Kernel32+ConsoleCtrlHandlerRoutine,System.Console", @"ConsoleCtrlHandlerRoutine");
            feature.AddKnownType(@"Interop+BOOL,System.Console", @"BOOL");
            feature.AddKnownType(@"Interop+User32,System.Console", @"User32");
            feature.AddKnownType(@"Interop+KeyEventRecord,System.Console", @"KeyEventRecord");
            feature.AddKnownType(@"Interop+InputRecord,System.Console", @"InputRecord");
            feature.AddKnownType(@"FxResources.System.Console.SR,System.Console", @"FxResources.System.Console.SR");
            feature.AddKnownType(@"System.Console,System.Console", @"Console");
            feature.AddKnownType(@"System.ConsoleCancelEventHandler,System.Console", @"ConsoleCancelEventHandler");
            feature.AddKnownType(@"System.ConsoleCancelEventArgs,System.Console", @"ConsoleCancelEventArgs");
            feature.AddKnownType(@"System.ConsoleColor,System.Console", @"ConsoleColor");
            feature.AddKnownType(@"System.ConsoleSpecialKey,System.Console", @"ConsoleSpecialKey");
            feature.AddKnownType(@"System.ConsoleKey,System.Console", @"ConsoleKey");
            feature.AddKnownType(@"System.ConsoleKeyInfo,System.Console", @"ConsoleKeyInfo");
            feature.AddKnownType(@"System.ConsoleModifiers,System.Console", @"ConsoleModifiers");
            feature.AddKnownType(@"System.ConsolePal,System.Console", @"ConsolePal");
            feature.AddKnownType(@"System.ConsolePal+ControlKeyState,System.Console", @"ControlKeyState");
            feature.AddKnownType(@"System.IO.ConsoleStream,System.Console", @"ConsoleStream");
            feature.AddKnownType(@"System.ConsolePal+ControlCHandlerRegistrar,System.Console", @"ControlCHandlerRegistrar");
            feature.AddKnownType(@"System.SR,System.Console", @"SR");
            feature.AddKnownType(@"System.Text.ConsoleEncoding,System.Console", @"ConsoleEncoding");
            feature.AddKnownType(@"System.Text.OSEncoding,System.Console", @"OSEncoding");
            feature.AddKnownType(@"System.Text.OSEncoder,System.Console", @"OSEncoder");
            feature.AddKnownType(@"System.Text.DecoderDBCS,System.Console", @"DecoderDBCS");
            feature.AddKnownType(@"System.Text.EncodingHelper,System.Console", @"EncodingHelper");
            feature.AddKnownType(@"System.IO.SyncTextReader,System.Console", @"SyncTextReader");
            feature.AddKnownType(@"System.IO.SyncTextWriter,System.Console", @"SyncTextWriter");
            feature.AddKnownType(@"System.IO.Error,System.Console", @"Error");
            feature.AddKnownType(@"System.IO.Win32Marshal,System.Console", @"Win32Marshal");
            feature.AddKnownType(@"SouthParkSilo.Program,SouthParkSilo", @"SouthParkSilo.Program");
            feature.AddKnownType(@"SouthParkSilo.Grains.CharacterGrain,SouthParkSilo", @"SouthParkSilo.Grains.CharacterGrain");
            feature.AddKnownType(@"SouthParkSilo.Grains.CharacterState,SouthParkSilo", @"SouthParkSilo.Grains.CharacterState");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.ConsoleLoggerExtensions,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.ConsoleLoggerExtensions");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.ConsoleLogger,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.ConsoleLogger");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.ConsoleLogScope,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.ConsoleLogScope");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.Internal.IConsole,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.Internal.IConsole");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.Internal.ConsoleLoggerProcessor,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.Internal.ConsoleLoggerProcessor");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.Internal.LogMessageEntry,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.Internal.LogMessageEntry");
            feature.AddKnownType(@"Microsoft.Extensions.Logging.Console.Internal.WindowsLogConsole,Microsoft.Extensions.Logging.Console", @"Microsoft.Extensions.Logging.Console.Internal.WindowsLogConsole");
            feature.AddKnownType(@"Interop,System.Net.Primitives", @"Interop");
            feature.AddKnownType(@"Interop+IpHlpApi,System.Net.Primitives", @"IpHlpApi");
            feature.AddKnownType(@"Interop+IpHlpApi+FIXED_INFO,System.Net.Primitives", @"IpHlpApi.FIXED_INFO");
            feature.AddKnownType(@"Interop+IpHlpApi+IP_ADDR_STRING,System.Net.Primitives", @"IpHlpApi.IP_ADDR_STRING");
            feature.AddKnownType(@"Interop+Kernel32,System.Net.Primitives", @"Kernel32");
            feature.AddKnownType(@"FxResources.System.Net.Primitives.SR,System.Net.Primitives", @"FxResources.System.Net.Primitives.SR");
            feature.AddKnownType(@"Microsoft.Win32.SafeHandles.SafeLocalAllocHandle,System.Net.Primitives", @"Microsoft.Win32.SafeHandles.SafeLocalAllocHandle");
            feature.AddKnownType(@"System.IPv4AddressHelper,System.Net.Primitives", @"IPv4AddressHelper");
            feature.AddKnownType(@"System.IPv6AddressHelper,System.Net.Primitives", @"IPv6AddressHelper");
            feature.AddKnownType(@"System.StringExtensions,System.Net.Primitives", @"StringExtensions");
            feature.AddKnownType(@"System.Marvin,System.Net.Primitives", @"Marvin");
            feature.AddKnownType(@"System.NotImplemented,System.Net.Primitives", @"NotImplemented");
            feature.AddKnownType(@"System.SR,System.Net.Primitives", @"SR");
            feature.AddKnownType(@"System.IO.StringBuilderCache,System.Net.Primitives", @"StringBuilderCache");
            feature.AddKnownType(@"System.Security.Authentication.SslProtocols,System.Net.Primitives", @"SslProtocols");
            feature.AddKnownType(@"System.Security.Authentication.ExchangeAlgorithmType,System.Net.Primitives", @"ExchangeAlgorithmType");
            feature.AddKnownType(@"System.Security.Authentication.CipherAlgorithmType,System.Net.Primitives", @"CipherAlgorithmType");
            feature.AddKnownType(@"System.Security.Authentication.HashAlgorithmType,System.Net.Primitives", @"HashAlgorithmType");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.ChannelBinding,System.Net.Primitives", @"ChannelBinding");
            feature.AddKnownType(@"System.Security.Authentication.ExtendedProtection.ChannelBindingKind,System.Net.Primitives", @"ChannelBindingKind");
            feature.AddKnownType(@"System.Net.AuthenticationSchemes,System.Net.Primitives", @"AuthenticationSchemes");
            feature.AddKnownType(@"System.Net.CookieVariant,System.Net.Primitives", @"CookieVariant");
            feature.AddKnownType(@"System.Net.Cookie,System.Net.Primitives", @"Cookie");
            feature.AddKnownType(@"System.Net.HeaderVariantInfo,System.Net.Primitives", @"HeaderVariantInfo");
            feature.AddKnownType(@"System.Net.CookieContainer,System.Net.Primitives", @"CookieContainer");
            feature.AddKnownType(@"System.Net.PathList,System.Net.Primitives", @"PathList");
            feature.AddKnownType(@"System.Net.CookieCollection,System.Net.Primitives", @"CookieCollection");
            feature.AddKnownType(@"System.Net.CookieCollection+Stamp,System.Net.Primitives", @"Stamp");
            feature.AddKnownType(@"System.Net.CookieException,System.Net.Primitives", @"CookieException");
            feature.AddKnownType(@"System.Net.CredentialCache,System.Net.Primitives", @"CredentialCache");
            feature.AddKnownType(@"System.Net.ICredentials,System.Net.Primitives", @"ICredentials");
            feature.AddKnownType(@"System.Net.ICredentialsByHost,System.Net.Primitives", @"ICredentialsByHost");
            feature.AddKnownType(@"System.Net.CredentialKey,System.Net.Primitives", @"CredentialKey");
            feature.AddKnownType(@"System.Net.SystemNetworkCredential,System.Net.Primitives", @"SystemNetworkCredential");
            feature.AddKnownType(@"System.Net.NetworkCredential,System.Net.Primitives", @"NetworkCredential");
            feature.AddKnownType(@"System.Net.CredentialHostKey,System.Net.Primitives", @"CredentialHostKey");
            feature.AddKnownType(@"System.Net.DecompressionMethods,System.Net.Primitives", @"DecompressionMethods");
            feature.AddKnownType(@"System.Net.DnsEndPoint,System.Net.Primitives", @"DnsEndPoint");
            feature.AddKnownType(@"System.Net.EndPoint,System.Net.Primitives", @"EndPoint");
            feature.AddKnownType(@"System.Net.HttpStatusCode,System.Net.Primitives", @"HttpStatusCode");
            feature.AddKnownType(@"System.Net.HttpVersion,System.Net.Primitives", @"HttpVersion");
            feature.AddKnownType(@"System.Net.IPAddressParser,System.Net.Primitives", @"IPAddressParser");
            feature.AddKnownType(@"System.Net.IWebProxy,System.Net.Primitives", @"IWebProxy");
            feature.AddKnownType(@"System.Net.NetEventSource,System.Net.Primitives", @"NetEventSource");
            feature.AddKnownType(@"System.Net.NetEventSource+Keywords,System.Net.Primitives", @"NetEventSource.Keywords");
            feature.AddKnownType(@"System.Net.TransportContext,System.Net.Primitives", @"TransportContext");
            feature.AddKnownType(@"System.Net.ByteOrder,System.Net.Primitives", @"ByteOrder");
            feature.AddKnownType(@"System.Net.CookieComparer,System.Net.Primitives", @"CookieComparer");
            feature.AddKnownType(@"System.Net.CookieToken,System.Net.Primitives", @"CookieToken");
            feature.AddKnownType(@"System.Net.CookieTokenizer,System.Net.Primitives", @"CookieTokenizer");
            feature.AddKnownType(@"System.Net.CookieParser,System.Net.Primitives", @"CookieParser");
            feature.AddKnownType(@"System.Net.TcpValidationHelpers,System.Net.Primitives", @"TcpValidationHelpers");
            feature.AddKnownType(@"System.Net.SocketAddress,System.Net.Primitives", @"SocketAddress");
            feature.AddKnownType(@"System.Net.SocketAddressPal,System.Net.Primitives", @"SocketAddressPal");
            feature.AddKnownType(@"System.Net.Cache.RequestCacheLevel,System.Net.Primitives", @"RequestCacheLevel");
            feature.AddKnownType(@"System.Net.Cache.RequestCachePolicy,System.Net.Primitives", @"RequestCachePolicy");
            feature.AddKnownType(@"System.Net.NetworkInformation.IPAddressCollection,System.Net.Primitives", @"IPAddressCollection");
            feature.AddKnownType(@"System.Net.NetworkInformation.HostInformation,System.Net.Primitives", @"HostInformation");
            feature.AddKnownType(@"System.Net.NetworkInformation.HostInformationPal,System.Net.Primitives", @"HostInformationPal");
            feature.AddKnownType(@"System.Net.Security.AuthenticationLevel,System.Net.Primitives", @"AuthenticationLevel");
            feature.AddKnownType(@"System.Net.Security.SslPolicyErrors,System.Net.Primitives", @"SslPolicyErrors");
            feature.AddKnownType(@"System.Net.Sockets.SocketException,System.Net.Primitives", @"SocketException");
            feature.AddKnownType(@"System.Net.Sockets.AddressFamily,System.Net.Primitives", @"AddressFamily");
            feature.AddKnownType(@"System.Net.Sockets.SocketError,System.Net.Primitives", @"SocketError");
            feature.AddKnownType(@"FxResources.System.Data.Common.SR,System.Data.Common", @"FxResources.System.Data.Common.SR");
            feature.AddKnownType(@"System.SR,System.Data.Common", @"SR");
            feature.AddKnownType(@"System.Xml.TreeIterator,System.Data.Common", @"TreeIterator");
            feature.AddKnownType(@"System.Xml.BaseTreeIterator,System.Data.Common", @"BaseTreeIterator");
            feature.AddKnownType(@"System.Xml.ElementState,System.Data.Common", @"ElementState");
            feature.AddKnownType(@"System.Xml.XmlBoundElement,System.Data.Common", @"XmlBoundElement");
            feature.AddKnownType(@"System.Xml.XmlDataDocument,System.Data.Common", @"XmlDataDocument");
            feature.AddKnownType(@"System.Xml.XmlDataImplementation,System.Data.Common", @"XmlDataImplementation");
            feature.AddKnownType(@"System.Xml.XPathNodePointer,System.Data.Common", @"XPathNodePointer");
            feature.AddKnownType(@"System.Xml.IXmlDataVirtualNode,System.Data.Common", @"IXmlDataVirtualNode");
            feature.AddKnownType(@"System.Xml.DataDocumentXPathNavigator,System.Data.Common", @"DataDocumentXPathNavigator");
            feature.AddKnownType(@"System.Xml.DataPointer,System.Data.Common", @"DataPointer");
            feature.AddKnownType(@"System.Xml.DataSetMapper,System.Data.Common", @"DataSetMapper");
            feature.AddKnownType(@"System.Xml.BaseRegionIterator,System.Data.Common", @"BaseRegionIterator");
            feature.AddKnownType(@"System.Xml.RegionIterator,System.Data.Common", @"RegionIterator");
            feature.AddKnownType(@"System.Data.UpdateStatus,System.Data.Common", @"UpdateStatus");
            feature.AddKnownType(@"System.Data.XDRSchema,System.Data.Common", @"XDRSchema");
            feature.AddKnownType(@"System.Data.XMLSchema,System.Data.Common", @"XMLSchema");
            feature.AddKnownType(@"System.Data.XmlDataLoader,System.Data.Common", @"XmlDataLoader");
            feature.AddKnownType(@"System.Data.XMLDiffLoader,System.Data.Common", @"XMLDiffLoader");
            feature.AddKnownType(@"System.Data.XmlReadMode,System.Data.Common", @"XmlReadMode");
            feature.AddKnownType(@"System.Data.SchemaFormat,System.Data.Common", @"SchemaFormat");
            feature.AddKnownType(@"System.Data.XmlTreeGen,System.Data.Common", @"XmlTreeGen");
            feature.AddKnownType(@"System.Data.NewDiffgramGen,System.Data.Common", @"NewDiffgramGen");
            feature.AddKnownType(@"System.Data.XmlDataTreeWriter,System.Data.Common", @"XmlDataTreeWriter");
            feature.AddKnownType(@"System.Data.DataTextWriter,System.Data.Common", @"DataTextWriter");
            feature.AddKnownType(@"System.Data.DataTextReader,System.Data.Common", @"DataTextReader");
            feature.AddKnownType(@"System.Data.ConstraintTable,System.Data.Common", @"ConstraintTable");
            feature.AddKnownType(@"System.Data.XSDSchema,System.Data.Common", @"XSDSchema");
            feature.AddKnownType(@"System.Data.XmlIgnoreNamespaceReader,System.Data.Common", @"XmlIgnoreNamespaceReader");
            feature.AddKnownType(@"System.Data.XmlToDatasetMap,System.Data.Common", @"XmlToDatasetMap");
            feature.AddKnownType(@"System.Data.XmlToDatasetMap+XmlNodeIdHashtable,System.Data.Common", @"XmlNodeIdHashtable");
            feature.AddKnownType(@"System.Data.XmlWriteMode,System.Data.Common", @"XmlWriteMode");
            feature.AddKnownType(@"System.Data.AcceptRejectRule,System.Data.Common", @"AcceptRejectRule");
            feature.AddKnownType(@"System.Data.AggregateType,System.Data.Common", @"AggregateType");
            feature.AddKnownType(@"System.Data.InternalDataCollectionBase,System.Data.Common", @"InternalDataCollectionBase");
            feature.AddKnownType(@"System.Data.ColumnTypeConverter,System.Data.Common", @"ColumnTypeConverter");
            feature.AddKnownType(@"System.Data.CommandBehavior,System.Data.Common", @"CommandBehavior");
            feature.AddKnownType(@"System.Data.CommandType,System.Data.Common", @"CommandType");
            feature.AddKnownType(@"System.Data.ConflictOption,System.Data.Common", @"ConflictOption");
            feature.AddKnownType(@"System.Data.ConnectionState,System.Data.Common", @"ConnectionState");
            feature.AddKnownType(@"System.Data.Constraint,System.Data.Common", @"Constraint");
            feature.AddKnownType(@"System.Data.ConstraintCollection,System.Data.Common", @"ConstraintCollection");
            feature.AddKnownType(@"System.Data.ConstraintConverter,System.Data.Common", @"ConstraintConverter");
            feature.AddKnownType(@"System.Data.ConstraintEnumerator,System.Data.Common", @"ConstraintEnumerator");
            feature.AddKnownType(@"System.Data.ForeignKeyConstraintEnumerator,System.Data.Common", @"ForeignKeyConstraintEnumerator");
            feature.AddKnownType(@"System.Data.ChildForeignKeyConstraintEnumerator,System.Data.Common", @"ChildForeignKeyConstraintEnumerator");
            feature.AddKnownType(@"System.Data.ParentForeignKeyConstraintEnumerator,System.Data.Common", @"ParentForeignKeyConstraintEnumerator");
            feature.AddKnownType(@"System.Data.DataColumn,System.Data.Common", @"DataColumn");
            feature.AddKnownType(@"System.Data.AutoIncrementValue,System.Data.Common", @"AutoIncrementValue");
            feature.AddKnownType(@"System.Data.AutoIncrementInt64,System.Data.Common", @"AutoIncrementInt64");
            feature.AddKnownType(@"System.Data.AutoIncrementBigInteger,System.Data.Common", @"AutoIncrementBigInteger");
            feature.AddKnownType(@"System.Data.DataColumnChangeEventArgs,System.Data.Common", @"DataColumnChangeEventArgs");
            feature.AddKnownType(@"System.Data.DataColumnChangeEventHandler,System.Data.Common", @"DataColumnChangeEventHandler");
            feature.AddKnownType(@"System.Data.DataColumnCollection,System.Data.Common", @"DataColumnCollection");
            feature.AddKnownType(@"System.Data.DataColumnPropertyDescriptor,System.Data.Common", @"DataColumnPropertyDescriptor");
            feature.AddKnownType(@"System.Data.DataError,System.Data.Common", @"DataError");
            feature.AddKnownType(@"System.Data.DataError+ColumnError,System.Data.Common", @"ColumnError");
            feature.AddKnownType(@"System.Data.DataException,System.Data.Common", @"DataException");
            feature.AddKnownType(@"System.Data.ConstraintException,System.Data.Common", @"ConstraintException");
            feature.AddKnownType(@"System.Data.DeletedRowInaccessibleException,System.Data.Common", @"DeletedRowInaccessibleException");
            feature.AddKnownType(@"System.Data.DuplicateNameException,System.Data.Common", @"DuplicateNameException");
            feature.AddKnownType(@"System.Data.InRowChangingEventException,System.Data.Common", @"InRowChangingEventException");
            feature.AddKnownType(@"System.Data.InvalidConstraintException,System.Data.Common", @"InvalidConstraintException");
            feature.AddKnownType(@"System.Data.MissingPrimaryKeyException,System.Data.Common", @"MissingPrimaryKeyException");
            feature.AddKnownType(@"System.Data.NoNullAllowedException,System.Data.Common", @"NoNullAllowedException");
            feature.AddKnownType(@"System.Data.ReadOnlyException,System.Data.Common", @"ReadOnlyException");
            feature.AddKnownType(@"System.Data.RowNotInTableException,System.Data.Common", @"RowNotInTableException");
            feature.AddKnownType(@"System.Data.VersionNotFoundException,System.Data.Common", @"VersionNotFoundException");
            feature.AddKnownType(@"System.Data.ExceptionBuilder,System.Data.Common", @"ExceptionBuilder");
            feature.AddKnownType(@"System.Data.DataKey,System.Data.Common", @"DataKey");
            feature.AddKnownType(@"System.Data.DataRelation,System.Data.Common", @"DataRelation");
            feature.AddKnownType(@"System.Data.DataRelationCollection,System.Data.Common", @"DataRelationCollection");
            feature.AddKnownType(@"System.Data.DataRelationCollection+DataTableRelationCollection,System.Data.Common", @"DataTableRelationCollection");
            feature.AddKnownType(@"System.Data.DataRelationCollection+DataSetRelationCollection,System.Data.Common", @"DataSetRelationCollection");
            feature.AddKnownType(@"System.Data.DataRelationPropertyDescriptor,System.Data.Common", @"DataRelationPropertyDescriptor");
            feature.AddKnownType(@"System.Data.DataRow,System.Data.Common", @"DataRow");
            feature.AddKnownType(@"System.Data.DataRowBuilder,System.Data.Common", @"DataRowBuilder");
            feature.AddKnownType(@"System.Data.DataRowAction,System.Data.Common", @"DataRowAction");
            feature.AddKnownType(@"System.Data.DataRowChangeEventArgs,System.Data.Common", @"DataRowChangeEventArgs");
            feature.AddKnownType(@"System.Data.DataRowChangeEventHandler,System.Data.Common", @"DataRowChangeEventHandler");
            feature.AddKnownType(@"System.Data.DataRowCollection,System.Data.Common", @"DataRowCollection");
            feature.AddKnownType(@"System.Data.RBTree`1,System.Data.Common", @"RBTree`1'1");
            feature.AddKnownType(@"System.Data.DataRowCreatedEventHandler,System.Data.Common", @"DataRowCreatedEventHandler");
            feature.AddKnownType(@"System.Data.DataSetClearEventhandler,System.Data.Common", @"DataSetClearEventhandler");
            feature.AddKnownType(@"System.Data.DataRowState,System.Data.Common", @"DataRowState");
            feature.AddKnownType(@"System.Data.DataRowVersion,System.Data.Common", @"DataRowVersion");
            feature.AddKnownType(@"System.Data.DataRowView,System.Data.Common", @"DataRowView");
            feature.AddKnownType(@"System.Data.SerializationFormat,System.Data.Common", @"SerializationFormat");
            feature.AddKnownType(@"System.Data.DataSet,System.Data.Common", @"DataSet");
            feature.AddKnownType(@"System.Data.DataSetDateTime,System.Data.Common", @"DataSetDateTime");
            feature.AddKnownType(@"System.Data.DataSysDescriptionAttribute,System.Data.Common", @"DataSysDescriptionAttribute");
            feature.AddKnownType(@"System.Data.DataTable,System.Data.Common", @"DataTable");
            feature.AddKnownType(@"System.Data.DataTable+RowDiffIdUsageSection,System.Data.Common", @"RowDiffIdUsageSection");
            feature.AddKnownType(@"System.Data.DataTable+DSRowDiffIdUsageSection,System.Data.Common", @"DSRowDiffIdUsageSection");
            feature.AddKnownType(@"System.Data.DataTableClearEventArgs,System.Data.Common", @"DataTableClearEventArgs");
            feature.AddKnownType(@"System.Data.DataTableClearEventHandler,System.Data.Common", @"DataTableClearEventHandler");
            feature.AddKnownType(@"System.Data.DataTableCollection,System.Data.Common", @"DataTableCollection");
            feature.AddKnownType(@"System.Data.DataTableNewRowEventArgs,System.Data.Common", @"DataTableNewRowEventArgs");
            feature.AddKnownType(@"System.Data.DataTableNewRowEventHandler,System.Data.Common", @"DataTableNewRowEventHandler");
            feature.AddKnownType(@"System.Data.DataTablePropertyDescriptor,System.Data.Common", @"DataTablePropertyDescriptor");
            feature.AddKnownType(@"System.Data.DataTableReader,System.Data.Common", @"DataTableReader");
            feature.AddKnownType(@"System.Data.Common.DbDataReader,System.Data.Common", @"DbDataReader");
            feature.AddKnownType(@"System.Data.IDataReader,System.Data.Common", @"IDataReader");
            feature.AddKnownType(@"System.Data.IDataRecord,System.Data.Common", @"IDataRecord");
            feature.AddKnownType(@"System.Data.DataTableReaderListener,System.Data.Common", @"DataTableReaderListener");
            feature.AddKnownType(@"System.Data.DataTableTypeConverter,System.Data.Common", @"DataTableTypeConverter");
            feature.AddKnownType(@"System.Data.DataView,System.Data.Common", @"DataView");
            feature.AddKnownType(@"System.Data.IFilter,System.Data.Common", @"IFilter");
            feature.AddKnownType(@"System.Data.DataViewListener,System.Data.Common", @"DataViewListener");
            feature.AddKnownType(@"System.Data.DataViewManager,System.Data.Common", @"DataViewManager");
            feature.AddKnownType(@"System.Data.DataViewManagerListItemTypeDescriptor,System.Data.Common", @"DataViewManagerListItemTypeDescriptor");
            feature.AddKnownType(@"System.Data.DataViewRowState,System.Data.Common", @"DataViewRowState");
            feature.AddKnownType(@"System.Data.DataViewSetting,System.Data.Common", @"DataViewSetting");
            feature.AddKnownType(@"System.Data.DataViewSettingCollection,System.Data.Common", @"DataViewSettingCollection");
            feature.AddKnownType(@"System.Data.DBConcurrencyException,System.Data.Common", @"DBConcurrencyException");
            feature.AddKnownType(@"System.Data.DbType,System.Data.Common", @"DbType");
            feature.AddKnownType(@"System.Data.DefaultValueTypeConverter,System.Data.Common", @"DefaultValueTypeConverter");
            feature.AddKnownType(@"System.Data.FillErrorEventArgs,System.Data.Common", @"FillErrorEventArgs");
            feature.AddKnownType(@"System.Data.FillErrorEventHandler,System.Data.Common", @"FillErrorEventHandler");
            feature.AddKnownType(@"System.Data.ForeignKeyConstraint,System.Data.Common", @"ForeignKeyConstraint");
            feature.AddKnownType(@"System.Data.IColumnMapping,System.Data.Common", @"IColumnMapping");
            feature.AddKnownType(@"System.Data.IColumnMappingCollection,System.Data.Common", @"IColumnMappingCollection");
            feature.AddKnownType(@"System.Data.IDataAdapter,System.Data.Common", @"IDataAdapter");
            feature.AddKnownType(@"System.Data.IDataParameter,System.Data.Common", @"IDataParameter");
            feature.AddKnownType(@"System.Data.IDataParameterCollection,System.Data.Common", @"IDataParameterCollection");
            feature.AddKnownType(@"System.Data.IDbCommand,System.Data.Common", @"IDbCommand");
            feature.AddKnownType(@"System.Data.IDbConnection,System.Data.Common", @"IDbConnection");
            feature.AddKnownType(@"System.Data.IDbDataAdapter,System.Data.Common", @"IDbDataAdapter");
            feature.AddKnownType(@"System.Data.IDbDataParameter,System.Data.Common", @"IDbDataParameter");
            feature.AddKnownType(@"System.Data.IDbTransaction,System.Data.Common", @"IDbTransaction");
            feature.AddKnownType(@"System.Data.IsolationLevel,System.Data.Common", @"IsolationLevel");
            feature.AddKnownType(@"System.Data.ITableMapping,System.Data.Common", @"ITableMapping");
            feature.AddKnownType(@"System.Data.ITableMappingCollection,System.Data.Common", @"ITableMappingCollection");
            feature.AddKnownType(@"System.Data.KeyRestrictionBehavior,System.Data.Common", @"KeyRestrictionBehavior");
            feature.AddKnownType(@"System.Data.LoadOption,System.Data.Common", @"LoadOption");
            feature.AddKnownType(@"System.Data.MappingType,System.Data.Common", @"MappingType");
            feature.AddKnownType(@"System.Data.MergeFailedEventArgs,System.Data.Common", @"MergeFailedEventArgs");
            feature.AddKnownType(@"System.Data.MergeFailedEventHandler,System.Data.Common", @"MergeFailedEventHandler");
            feature.AddKnownType(@"System.Data.Merger,System.Data.Common", @"Merger");
            feature.AddKnownType(@"System.Data.MissingMappingAction,System.Data.Common", @"MissingMappingAction");
            feature.AddKnownType(@"System.Data.MissingSchemaAction,System.Data.Common", @"MissingSchemaAction");
            feature.AddKnownType(@"System.Data.ParameterDirection,System.Data.Common", @"ParameterDirection");
            feature.AddKnownType(@"System.Data.PrimaryKeyTypeConverter,System.Data.Common", @"PrimaryKeyTypeConverter");
            feature.AddKnownType(@"System.Data.PropertyCollection,System.Data.Common", @"PropertyCollection");
            feature.AddKnownType(@"System.Data.Range,System.Data.Common", @"Range");
            feature.AddKnownType(@"System.Data.RBTreeError,System.Data.Common", @"RBTreeError");
            feature.AddKnownType(@"System.Data.TreeAccessMethod,System.Data.Common", @"TreeAccessMethod");
            feature.AddKnownType(@"System.Data.RBTree`1+RBTreeEnumerator,System.Data.Common", @"RBTreeEnumerator'1");
            feature.AddKnownType(@"System.Data.RecordManager,System.Data.Common", @"RecordManager");
            feature.AddKnownType(@"System.Data.StatementCompletedEventArgs,System.Data.Common", @"StatementCompletedEventArgs");
            feature.AddKnownType(@"System.Data.StatementCompletedEventHandler,System.Data.Common", @"StatementCompletedEventHandler");
            feature.AddKnownType(@"System.Data.RelatedView,System.Data.Common", @"RelatedView");
            feature.AddKnownType(@"System.Data.RelationshipConverter,System.Data.Common", @"RelationshipConverter");
            feature.AddKnownType(@"System.Data.Rule,System.Data.Common", @"Rule");
            feature.AddKnownType(@"System.Data.SchemaSerializationMode,System.Data.Common", @"SchemaSerializationMode");
            feature.AddKnownType(@"System.Data.SchemaType,System.Data.Common", @"SchemaType");
            feature.AddKnownType(@"System.Data.Select,System.Data.Common", @"Select");
            feature.AddKnownType(@"System.Data.IndexField,System.Data.Common", @"IndexField");
            feature.AddKnownType(@"System.Data.Index,System.Data.Common", @"Index");
            feature.AddKnownType(@"System.Data.Listeners`1,System.Data.Common", @"Listeners`1'1");
            feature.AddKnownType(@"System.Data.Listeners`1+Action`4,System.Data.Common", @"Action`4'5");
            feature.AddKnownType(@"System.Data.Listeners`1+Func`2,System.Data.Common", @"Func`2'3");
            feature.AddKnownType(@"System.Data.SimpleType,System.Data.Common", @"SimpleType");
            feature.AddKnownType(@"System.Data.SqlDbType,System.Data.Common", @"SqlDbType");
            feature.AddKnownType(@"System.Data.StateChangeEventArgs,System.Data.Common", @"StateChangeEventArgs");
            feature.AddKnownType(@"System.Data.StateChangeEventHandler,System.Data.Common", @"StateChangeEventHandler");
            feature.AddKnownType(@"System.Data.StatementType,System.Data.Common", @"StatementType");
            feature.AddKnownType(@"System.Data.StrongTypingException,System.Data.Common", @"StrongTypingException");
            feature.AddKnownType(@"System.Data.UniqueConstraint,System.Data.Common", @"UniqueConstraint");
            feature.AddKnownType(@"System.Data.UpdateRowSource,System.Data.Common", @"UpdateRowSource");
            feature.AddKnownType(@"System.Data.DataCommonEventSource,System.Data.Common", @"DataCommonEventSource");
            feature.AddKnownType(@"System.Data.DataExpression,System.Data.Common", @"DataExpression");
            feature.AddKnownType(@"System.Data.ExpressionNode,System.Data.Common", @"ExpressionNode");
            feature.AddKnownType(@"System.Data.ValueType,System.Data.Common", @"ValueType");
            feature.AddKnownType(@"System.Data.Nodes,System.Data.Common", @"Nodes");
            feature.AddKnownType(@"System.Data.ExpressionParser,System.Data.Common", @"ExpressionParser");
            feature.AddKnownType(@"System.Data.Tokens,System.Data.Common", @"Tokens");
            feature.AddKnownType(@"System.Data.OperatorInfo,System.Data.Common", @"OperatorInfo");
            feature.AddKnownType(@"System.Data.InvalidExpressionException,System.Data.Common", @"InvalidExpressionException");
            feature.AddKnownType(@"System.Data.EvaluateException,System.Data.Common", @"EvaluateException");
            feature.AddKnownType(@"System.Data.SyntaxErrorException,System.Data.Common", @"SyntaxErrorException");
            feature.AddKnownType(@"System.Data.ExprException,System.Data.Common", @"ExprException");
            feature.AddKnownType(@"System.Data.FunctionNode,System.Data.Common", @"FunctionNode");
            feature.AddKnownType(@"System.Data.FunctionId,System.Data.Common", @"FunctionId");
            feature.AddKnownType(@"System.Data.Function,System.Data.Common", @"Function");
            feature.AddKnownType(@"System.Data.LookupNode,System.Data.Common", @"LookupNode");
            feature.AddKnownType(@"System.Data.NameNode,System.Data.Common", @"NameNode");
            feature.AddKnownType(@"System.Data.Operators,System.Data.Common", @"Operators");
            feature.AddKnownType(@"System.Data.UnaryNode,System.Data.Common", @"UnaryNode");
            feature.AddKnownType(@"System.Data.ZeroOpNode,System.Data.Common", @"ZeroOpNode");
            feature.AddKnownType(@"System.Data.Aggregate,System.Data.Common", @"Aggregate");
            feature.AddKnownType(@"System.Data.AggregateNode,System.Data.Common", @"AggregateNode");
            feature.AddKnownType(@"System.Data.BinaryNode,System.Data.Common", @"BinaryNode");
            feature.AddKnownType(@"System.Data.LikeNode,System.Data.Common", @"LikeNode");
            feature.AddKnownType(@"System.Data.ConstNode,System.Data.Common", @"ConstNode");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlChars,System.Data.Common", @"SqlChars");
            feature.AddKnownType(@"System.Data.SqlTypes.INullable,System.Data.Common", @"INullable");
            feature.AddKnownType(@"System.Data.SqlTypes.StreamOnSqlChars,System.Data.Common", @"StreamOnSqlChars");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlStreamChars,System.Data.Common", @"SqlStreamChars");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlDateTime,System.Data.Common", @"SqlDateTime");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlDecimal,System.Data.Common", @"SqlDecimal");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlDouble,System.Data.Common", @"SqlDouble");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlGuid,System.Data.Common", @"SqlGuid");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlInt16,System.Data.Common", @"SqlInt16");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlInt32,System.Data.Common", @"SqlInt32");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlInt64,System.Data.Common", @"SqlInt64");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlMoney,System.Data.Common", @"SqlMoney");
            feature.AddKnownType(@"System.Data.SqlTypes.SQLResource,System.Data.Common", @"SQLResource");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlSingle,System.Data.Common", @"SqlSingle");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlCompareOptions,System.Data.Common", @"SqlCompareOptions");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlString,System.Data.Common", @"SqlString");
            feature.AddKnownType(@"System.Data.SqlTypes.EComparison,System.Data.Common", @"EComparison");
            feature.AddKnownType(@"System.Data.SqlTypes.StorageState,System.Data.Common", @"StorageState");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlTypeException,System.Data.Common", @"SqlTypeException");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlNullValueException,System.Data.Common", @"SqlNullValueException");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlTruncateException,System.Data.Common", @"SqlTruncateException");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlNotFilledException,System.Data.Common", @"SqlNotFilledException");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlAlreadyFilledException,System.Data.Common", @"SqlAlreadyFilledException");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlXml,System.Data.Common", @"SqlXml");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlXmlStreamWrapper,System.Data.Common", @"SqlXmlStreamWrapper");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlBinary,System.Data.Common", @"SqlBinary");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlBoolean,System.Data.Common", @"SqlBoolean");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlByte,System.Data.Common", @"SqlByte");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlBytesCharsState,System.Data.Common", @"SqlBytesCharsState");
            feature.AddKnownType(@"System.Data.SqlTypes.SqlBytes,System.Data.Common", @"SqlBytes");
            feature.AddKnownType(@"System.Data.SqlTypes.StreamOnSqlBytes,System.Data.Common", @"StreamOnSqlBytes");
            feature.AddKnownType(@"System.Data.ProviderBase.FieldNameLookup,System.Data.Common", @"FieldNameLookup");
            feature.AddKnownType(@"System.Data.ProviderBase.DataReaderContainer,System.Data.Common", @"DataReaderContainer");
            feature.AddKnownType(@"System.Data.ProviderBase.SchemaMapping,System.Data.Common", @"SchemaMapping");
            feature.AddKnownType(@"System.Data.Common.DbColumn,System.Data.Common", @"DbColumn");
            feature.AddKnownType(@"System.Data.Common.IDbColumnSchemaGenerator,System.Data.Common", @"IDbColumnSchemaGenerator");
            feature.AddKnownType(@"System.Data.Common.CatalogLocation,System.Data.Common", @"CatalogLocation");
            feature.AddKnownType(@"System.Data.Common.UInt64Storage,System.Data.Common", @"UInt64Storage");
            feature.AddKnownType(@"System.Data.Common.DataStorage,System.Data.Common", @"DataStorage");
            feature.AddKnownType(@"System.Data.Common.ADP,System.Data.Common", @"ADP");
            feature.AddKnownType(@"System.Data.Common.ADP+InternalErrorCode,System.Data.Common", @"InternalErrorCode");
            feature.AddKnownType(@"System.Data.Common.BigIntegerStorage,System.Data.Common", @"BigIntegerStorage");
            feature.AddKnownType(@"System.Data.Common.BooleanStorage,System.Data.Common", @"BooleanStorage");
            feature.AddKnownType(@"System.Data.Common.ByteStorage,System.Data.Common", @"ByteStorage");
            feature.AddKnownType(@"System.Data.Common.CharStorage,System.Data.Common", @"CharStorage");
            feature.AddKnownType(@"System.Data.Common.DataAdapter,System.Data.Common", @"DataAdapter");
            feature.AddKnownType(@"System.Data.Common.LoadAdapter,System.Data.Common", @"LoadAdapter");
            feature.AddKnownType(@"System.Data.Common.DataColumnMapping,System.Data.Common", @"DataColumnMapping");
            feature.AddKnownType(@"System.Data.Common.DataColumnMapping+DataColumnMappingConverter,System.Data.Common", @"DataColumnMappingConverter");
            feature.AddKnownType(@"System.Data.Common.DataColumnMappingCollection,System.Data.Common", @"DataColumnMappingCollection");
            feature.AddKnownType(@"System.Data.Common.DataRecordInternal,System.Data.Common", @"DataRecordInternal");
            feature.AddKnownType(@"System.Data.Common.DbDataRecord,System.Data.Common", @"DbDataRecord");
            feature.AddKnownType(@"System.Data.Common.SchemaInfo,System.Data.Common", @"SchemaInfo");
            feature.AddKnownType(@"System.Data.Common.StorageType,System.Data.Common", @"StorageType");
            feature.AddKnownType(@"System.Data.Common.DataTableMapping,System.Data.Common", @"DataTableMapping");
            feature.AddKnownType(@"System.Data.Common.DataTableMapping+DataTableMappingConverter,System.Data.Common", @"DataTableMappingConverter");
            feature.AddKnownType(@"System.Data.Common.DataTableMappingCollection,System.Data.Common", @"DataTableMappingCollection");
            feature.AddKnownType(@"System.Data.Common.DateTimeOffsetStorage,System.Data.Common", @"DateTimeOffsetStorage");
            feature.AddKnownType(@"System.Data.Common.DateTimeStorage,System.Data.Common", @"DateTimeStorage");
            feature.AddKnownType(@"System.Data.Common.DbCommand,System.Data.Common", @"DbCommand");
            feature.AddKnownType(@"System.Data.Common.DbCommandBuilder,System.Data.Common", @"DbCommandBuilder");
            feature.AddKnownType(@"System.Data.Common.DbConnection,System.Data.Common", @"DbConnection");
            feature.AddKnownType(@"System.Data.Common.DbConnectionOptions,System.Data.Common", @"DbConnectionOptions");
            feature.AddKnownType(@"System.Data.Common.DbConnectionStringBuilder,System.Data.Common", @"DbConnectionStringBuilder");
            feature.AddKnownType(@"System.Data.Common.DbConnectionStringBuilderUtil,System.Data.Common", @"DbConnectionStringBuilderUtil");
            feature.AddKnownType(@"System.Data.Common.DbConnectionStringBuilderDescriptor,System.Data.Common", @"DbConnectionStringBuilderDescriptor");
            feature.AddKnownType(@"System.Data.Common.DbDataAdapter,System.Data.Common", @"DbDataAdapter");
            feature.AddKnownType(@"System.Data.Common.DbDataReaderExtensions,System.Data.Common", @"DbDataReaderExtensions");
            feature.AddKnownType(@"System.Data.Common.DbDataSourceEnumerator,System.Data.Common", @"DbDataSourceEnumerator");
            feature.AddKnownType(@"System.Data.Common.DbEnumerator,System.Data.Common", @"DbEnumerator");
            feature.AddKnownType(@"System.Data.Common.DbException,System.Data.Common", @"DbException");
            feature.AddKnownType(@"System.Data.Common.DbMetaDataCollectionNames,System.Data.Common", @"DbMetaDataCollectionNames");
            feature.AddKnownType(@"System.Data.Common.DbMetaDataColumnNames,System.Data.Common", @"DbMetaDataColumnNames");
            feature.AddKnownType(@"System.Data.Common.DbParameter,System.Data.Common", @"DbParameter");
            feature.AddKnownType(@"System.Data.Common.DbParameterCollection,System.Data.Common", @"DbParameterCollection");
            feature.AddKnownType(@"System.Data.Common.DbProviderFactory,System.Data.Common", @"DbProviderFactory");
            feature.AddKnownType(@"System.Data.Common.DbProviderFactories,System.Data.Common", @"DbProviderFactories");
            feature.AddKnownType(@"System.Data.Common.DbProviderSpecificTypePropertyAttribute,System.Data.Common", @"DbProviderSpecificTypePropertyAttribute");
            feature.AddKnownType(@"System.Data.Common.DbSchemaRow,System.Data.Common", @"DbSchemaRow");
            feature.AddKnownType(@"System.Data.Common.DbSchemaTable,System.Data.Common", @"DbSchemaTable");
            feature.AddKnownType(@"System.Data.Common.DbTransaction,System.Data.Common", @"DbTransaction");
            feature.AddKnownType(@"System.Data.Common.DecimalStorage,System.Data.Common", @"DecimalStorage");
            feature.AddKnownType(@"System.Data.Common.DoubleStorage,System.Data.Common", @"DoubleStorage");
            feature.AddKnownType(@"System.Data.Common.GroupByBehavior,System.Data.Common", @"GroupByBehavior");
            feature.AddKnownType(@"System.Data.Common.IdentifierCase,System.Data.Common", @"IdentifierCase");
            feature.AddKnownType(@"System.Data.Common.Int16Storage,System.Data.Common", @"Int16Storage");
            feature.AddKnownType(@"System.Data.Common.Int32Storage,System.Data.Common", @"Int32Storage");
            feature.AddKnownType(@"System.Data.Common.Int64Storage,System.Data.Common", @"Int64Storage");
            feature.AddKnownType(@"System.Data.Common.NameValuePair,System.Data.Common", @"NameValuePair");
            feature.AddKnownType(@"System.Data.Common.ObjectStorage,System.Data.Common", @"ObjectStorage");
            feature.AddKnownType(@"System.Data.Common.RowUpdatedEventArgs,System.Data.Common", @"RowUpdatedEventArgs");
            feature.AddKnownType(@"System.Data.Common.RowUpdatingEventArgs,System.Data.Common", @"RowUpdatingEventArgs");
            feature.AddKnownType(@"System.Data.Common.SByteStorage,System.Data.Common", @"SByteStorage");
            feature.AddKnownType(@"System.Data.Common.SchemaTableColumn,System.Data.Common", @"SchemaTableColumn");
            feature.AddKnownType(@"System.Data.Common.SchemaTableOptionalColumn,System.Data.Common", @"SchemaTableOptionalColumn");
            feature.AddKnownType(@"System.Data.Common.SingleStorage,System.Data.Common", @"SingleStorage");
            feature.AddKnownType(@"System.Data.Common.SqlConvert,System.Data.Common", @"SqlConvert");
            feature.AddKnownType(@"System.Data.Common.SqlUdtStorage,System.Data.Common", @"SqlUdtStorage");
            feature.AddKnownType(@"System.Data.Common.StringStorage,System.Data.Common", @"StringStorage");
            feature.AddKnownType(@"System.Data.Common.SupportedJoinOperators,System.Data.Common", @"SupportedJoinOperators");
            feature.AddKnownType(@"System.Data.Common.TimeSpanStorage,System.Data.Common", @"TimeSpanStorage");
            feature.AddKnownType(@"System.Data.Common.UInt16Storage,System.Data.Common", @"UInt16Storage");
            feature.AddKnownType(@"System.Data.Common.UInt32Storage,System.Data.Common", @"UInt32Storage");
            feature.AddKnownType(@"System.Data.Common.SqlCharsStorage,System.Data.Common", @"SqlCharsStorage");
            feature.AddKnownType(@"System.Data.Common.SqlDateTimeStorage,System.Data.Common", @"SqlDateTimeStorage");
            feature.AddKnownType(@"System.Data.Common.SqlDecimalStorage,System.Data.Common", @"SqlDecimalStorage");
            feature.AddKnownType(@"System.Data.Common.SqlDoubleStorage,System.Data.Common", @"SqlDoubleStorage");
            feature.AddKnownType(@"System.Data.Common.SqlGuidStorage,System.Data.Common", @"SqlGuidStorage");
            feature.AddKnownType(@"System.Data.Common.SqlInt16Storage,System.Data.Common", @"SqlInt16Storage");
            feature.AddKnownType(@"System.Data.Common.SqlInt32Storage,System.Data.Common", @"SqlInt32Storage");
            feature.AddKnownType(@"System.Data.Common.SqlInt64Storage,System.Data.Common", @"SqlInt64Storage");
            feature.AddKnownType(@"System.Data.Common.SqlMoneyStorage,System.Data.Common", @"SqlMoneyStorage");
            feature.AddKnownType(@"System.Data.Common.SqlSingleStorage,System.Data.Common", @"SqlSingleStorage");
            feature.AddKnownType(@"System.Data.Common.SqlStringStorage,System.Data.Common", @"SqlStringStorage");
            feature.AddKnownType(@"System.Data.Common.SqlBinaryStorage,System.Data.Common", @"SqlBinaryStorage");
            feature.AddKnownType(@"System.Data.Common.SqlBooleanStorage,System.Data.Common", @"SqlBooleanStorage");
            feature.AddKnownType(@"System.Data.Common.SqlBytesStorage,System.Data.Common", @"SqlBytesStorage");
            feature.AddKnownType(@"System.Data.Common.SqlByteStorage,System.Data.Common", @"SqlByteStorage");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.AdoNetFormatProvider,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.AdoNetFormatProvider");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.AdoNetInvariants,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.AdoNetInvariants");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.DbConnectionFactory,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.DbConnectionFactory");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.DbExtensions,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.DbExtensions");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.DbConstantsStore,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.DbConstantsStore");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.DbConstants,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.DbConstants");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.DbStoredQueries,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.DbStoredQueries");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.ICommandInterceptor,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.ICommandInterceptor");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.IRelationalStorage,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.IRelationalStorage");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.NoOpCommandInterceptor,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.NoOpCommandInterceptor");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.OracleCommandInterceptor,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.OracleCommandInterceptor");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.OrleansRelationalDownloadStream,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.OrleansRelationalDownloadStream");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.RelationalOrleansQueries,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.RelationalOrleansQueries");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.RelationalStorage,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.RelationalStorage");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.RelationalStorageExtensions,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.RelationalStorageExtensions");
            feature.AddKnownType(@"Orleans.Configuration.AdoNetClusteringClientOptions,Orleans.Clustering.AdoNet", @"Orleans.Configuration.AdoNetClusteringClientOptions");
            feature.AddKnownType(@"Orleans.Configuration.AdoNetClusteringClientOptionsValidator,Orleans.Clustering.AdoNet", @"Orleans.Configuration.AdoNetClusteringClientOptionsValidator");
            feature.AddKnownType(@"Orleans.Configuration.AdoNetClusteringSiloOptions,Orleans.Clustering.AdoNet", @"Orleans.Configuration.AdoNetClusteringSiloOptions");
            feature.AddKnownType(@"Orleans.Configuration.AdoNetClusteringSiloOptionsValidator,Orleans.Clustering.AdoNet", @"Orleans.Configuration.AdoNetClusteringSiloOptionsValidator");
            feature.AddKnownType(@"Orleans.AdoNet.LegacyAdoNetClusteringConfigurator,Orleans.Clustering.AdoNet", @"Orleans.AdoNet.LegacyAdoNetClusteringConfigurator");
            feature.AddKnownType(@"Orleans.AdoNet.Messaging.LegacyAdoNetGatewayListProviderConfigurator,Orleans.Clustering.AdoNet", @"Orleans.AdoNet.Messaging.LegacyAdoNetGatewayListProviderConfigurator");
            feature.AddKnownType(@"Orleans.Runtime.Membership.AdoNetGatewayListProvider,Orleans.Clustering.AdoNet", @"Orleans.Runtime.Membership.AdoNetGatewayListProvider");
            feature.AddKnownType(@"Orleans.Runtime.MembershipService.AdoNetClusteringTable,Orleans.Clustering.AdoNet", @"Orleans.Runtime.MembershipService.AdoNetClusteringTable");
            feature.AddKnownType(@"Orleans.Hosting.AdoNetHostingExtensions,Orleans.Clustering.AdoNet", @"Orleans.Hosting.AdoNetHostingExtensions");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.DbStoredQueries+Converters,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.Converters");
            feature.AddKnownType(@"Orleans.Clustering.AdoNet.Storage.DbStoredQueries+Columns,Orleans.Clustering.AdoNet", @"Orleans.Clustering.AdoNet.Storage.Columns");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.AdoNetInvariants,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.AdoNetInvariants");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.DbConnectionFactory,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.DbConnectionFactory");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.DbExtensions,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.DbExtensions");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.DbConstantsStore,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.DbConstantsStore");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.DbConstants,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.DbConstants");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.DbStoredQueries,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.DbStoredQueries");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.ICommandInterceptor,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.ICommandInterceptor");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.IRelationalStorage,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.IRelationalStorage");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.NoOpCommandInterceptor,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.NoOpCommandInterceptor");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.OracleCommandInterceptor,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.OracleCommandInterceptor");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.OrleansRelationalDownloadStream,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.OrleansRelationalDownloadStream");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.RelationalOrleansQueries,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.RelationalOrleansQueries");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.RelationalStorage,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.RelationalStorage");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.RelationalStorageExtensions,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.RelationalStorageExtensions");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.AdoNetFormatProvider,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.AdoNetFormatProvider");
            feature.AddKnownType(@"Orleans.Hosting.SiloBuilderExtensions,Orleans.Persistence.AdoNet", @"Orleans.Hosting.SiloBuilderExtensions");
            feature.AddKnownType(@"Orleans.Storage.AdoGrainKey,Orleans.Persistence.AdoNet", @"Orleans.Storage.AdoGrainKey");
            feature.AddKnownType(@"Orleans.Storage.RelationalStorageProviderCodes,Orleans.Persistence.AdoNet", @"Orleans.Storage.RelationalStorageProviderCodes");
            feature.AddKnownType(@"Orleans.Storage.AdoNetGrainStorageFactory,Orleans.Persistence.AdoNet", @"Orleans.Storage.AdoNetGrainStorageFactory");
            feature.AddKnownType(@"Orleans.Storage.AdoNetGrainStorage,Orleans.Persistence.AdoNet", @"Orleans.Storage.AdoNetGrainStorage");
            feature.AddKnownType(@"Orleans.Storage.IHasher,Orleans.Persistence.AdoNet", @"Orleans.Storage.IHasher");
            feature.AddKnownType(@"Orleans.Storage.IStorageDeserializer,Orleans.Persistence.AdoNet", @"Orleans.Storage.IStorageDeserializer");
            feature.AddKnownType(@"Orleans.Storage.IStorageHasherPicker,Orleans.Persistence.AdoNet", @"Orleans.Storage.IStorageHasherPicker");
            feature.AddKnownType(@"Orleans.Storage.SerializationChoice,Orleans.Persistence.AdoNet", @"Orleans.Storage.SerializationChoice");
            feature.AddKnownType(@"Orleans.Storage.IStorageSerializationPicker,Orleans.Persistence.AdoNet", @"Orleans.Storage.IStorageSerializationPicker");
            feature.AddKnownType(@"Orleans.Storage.IStorageSerializer,Orleans.Persistence.AdoNet", @"Orleans.Storage.IStorageSerializer");
            feature.AddKnownType(@"Orleans.Storage.OrleansDefaultHasher,Orleans.Persistence.AdoNet", @"Orleans.Storage.OrleansDefaultHasher");
            feature.AddKnownType(@"Orleans.Storage.OrleansStorageDefaultBinaryDeserializer,Orleans.Persistence.AdoNet", @"Orleans.Storage.OrleansStorageDefaultBinaryDeserializer");
            feature.AddKnownType(@"Orleans.Storage.OrleansStorageDefaultBinarySerializer,Orleans.Persistence.AdoNet", @"Orleans.Storage.OrleansStorageDefaultBinarySerializer");
            feature.AddKnownType(@"Orleans.Storage.OrleansStorageDefaultJsonDeserializer,Orleans.Persistence.AdoNet", @"Orleans.Storage.OrleansStorageDefaultJsonDeserializer");
            feature.AddKnownType(@"Orleans.Storage.OrleansStorageDefaultJsonSerializer,Orleans.Persistence.AdoNet", @"Orleans.Storage.OrleansStorageDefaultJsonSerializer");
            feature.AddKnownType(@"Orleans.Storage.OrleansStorageDefaultXmlDeserializer,Orleans.Persistence.AdoNet", @"Orleans.Storage.OrleansStorageDefaultXmlDeserializer");
            feature.AddKnownType(@"Orleans.Storage.OrleansStorageDefaultXmlSerializer,Orleans.Persistence.AdoNet", @"Orleans.Storage.OrleansStorageDefaultXmlSerializer");
            feature.AddKnownType(@"Orleans.Storage.RelationalStorageProviderQueries,Orleans.Persistence.AdoNet", @"Orleans.Storage.RelationalStorageProviderQueries");
            feature.AddKnownType(@"Orleans.Storage.StorageHasherPicker,Orleans.Persistence.AdoNet", @"Orleans.Storage.StorageHasherPicker");
            feature.AddKnownType(@"Orleans.Storage.DefaultRelationalStoragePicker,Orleans.Persistence.AdoNet", @"Orleans.Storage.DefaultRelationalStoragePicker");
            feature.AddKnownType(@"Orleans.Configuration.AdoNetGrainStorageOptions,Orleans.Persistence.AdoNet", @"Orleans.Configuration.AdoNetGrainStorageOptions");
            feature.AddKnownType(@"Orleans.Configuration.AdoNetGrainStorageOptionsValidator,Orleans.Persistence.AdoNet", @"Orleans.Configuration.AdoNetGrainStorageOptionsValidator");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.DbStoredQueries+Converters,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.Converters");
            feature.AddKnownType(@"Orleans.Persistence.AdoNet.Storage.DbStoredQueries+Columns,Orleans.Persistence.AdoNet", @"Orleans.Persistence.AdoNet.Storage.Columns");
            feature.AddKnownType(@"FluentColorConsole.BackgroundFirstConsole,FluentColorConsole", @"FluentColorConsole.BackgroundFirstConsole");
            feature.AddKnownType(@"FluentColorConsole.IConsole,FluentColorConsole", @"FluentColorConsole.IConsole");
            feature.AddKnownType(@"FluentColorConsole.ColorConsole,FluentColorConsole", @"FluentColorConsole.ColorConsole");
            feature.AddKnownType(@"FluentColorConsole.SimpleConsole,FluentColorConsole", @"FluentColorConsole.SimpleConsole");
            feature.AddKnownType(@"FluentColorConsole.TextFirstConsole,FluentColorConsole", @"FluentColorConsole.TextFirstConsole");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
